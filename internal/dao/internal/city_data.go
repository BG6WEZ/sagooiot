// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// CityDataDao is the data access object for table city_data.
type CityDataDao struct {
	table   string          // table is the underlying table name of the DAO.
	group   string          // group is the database configuration group name of current DAO.
	columns CityDataColumns // columns contains all the column names of Table for convenient usage.
}

// CityDataColumns defines and stores column names for table city_data.
type CityDataColumns struct {
	Id        string //
	Name      string // 名字
	Code      string // 编码
	ParentId  string // 父ID
	Sort      string // 排序
	Status    string // 状态;0:禁用;1:正常
	IsDeleted string // 是否删除 0未删除 1已删除
	CreatedBy string // 创建者
	CreatedAt string // 创建日期
	UpdatedBy string // 更新者
	UpdatedAt string // 修改日期
	DeletedBy string // 删除人
	DeletedAt string // 删除时间
}

// cityDataColumns holds the columns for table city_data.
var cityDataColumns = CityDataColumns{
	Id:        "id",
	Name:      "name",
	Code:      "code",
	ParentId:  "parent_id",
	Sort:      "sort",
	Status:    "status",
	IsDeleted: "is_deleted",
	CreatedBy: "created_by",
	CreatedAt: "created_at",
	UpdatedBy: "updated_by",
	UpdatedAt: "updated_at",
	DeletedBy: "deleted_by",
	DeletedAt: "deleted_at",
}

// NewCityDataDao creates and returns a new DAO object for table data access.
func NewCityDataDao() *CityDataDao {
	return &CityDataDao{
		group:   "default",
		table:   "city_data",
		columns: cityDataColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *CityDataDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *CityDataDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *CityDataDao) Columns() CityDataColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *CityDataDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *CityDataDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *CityDataDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
