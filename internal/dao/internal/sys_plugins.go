// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// SysPluginsDao is the data access object for table sys_plugins.
type SysPluginsDao struct {
	table   string            // table is the underlying table name of the DAO.
	group   string            // group is the database configuration group name of current DAO.
	columns SysPluginsColumns // columns contains all the column names of Table for convenient usage.
}

// SysPluginsColumns defines and stores column names for table sys_plugins.
type SysPluginsColumns struct {
	Id        string // ID
	Name      string // 名称
	Title     string // 标题
	Intro     string // 介绍
	Version   string // 版本
	Status    string // 状态
	Types     string // 插件类型
	Author    string //
	StartTime string //
	IsDeleted             string // 是否删除 0未删除 1已删除
}

// sysPluginsColumns holds the columns for table sys_plugins.
var sysPluginsColumns = SysPluginsColumns{
	Id:        "id",
	Name:      "name",
	Title:     "title",
	Intro:     "intro",
	Version:   "version",
	Status:    "status",
	Types:     "types",
	Author:    "author",
	StartTime: "start_time",
}

// NewSysPluginsDao creates and returns a new DAO object for table data access.
func NewSysPluginsDao() *SysPluginsDao {
	return &SysPluginsDao{
		group:   "default",
		table:   "sys_plugins",
		columns: sysPluginsColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *SysPluginsDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *SysPluginsDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *SysPluginsDao) Columns() SysPluginsColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *SysPluginsDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *SysPluginsDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *SysPluginsDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
